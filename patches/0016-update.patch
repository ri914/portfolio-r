From 69fbc0900a29a545bb60d89a00c5ff56ba2c882a Mon Sep 17 00:00:00 2001
From: Apple <apple@Apples-MacBook-Air.local>
Date: Sun, 2 Feb 2025 14:44:34 +0900
Subject: [PATCH 16/17] =?UTF-8?q?[update]=E3=83=A6=E3=83=BC=E3=82=B6?=
 =?UTF-8?q?=E3=83=BC=E3=81=AB=E9=96=A2=E3=81=99=E3=82=8B=E3=83=A2=E3=83=87?=
 =?UTF-8?q?=E3=83=AB=E3=82=B9=E3=83=9A=E3=83=83=E3=82=AF=E3=82=92=E4=BD=9C?=
 =?UTF-8?q?=E6=88=90?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 Gemfile                  |  1 +
 Gemfile.lock             |  3 ++
 spec/model/users_spec.rb | 66 ++++++++++++++++++++++++++++++++++++++++
 spec/rails_helper.rb     |  8 ++++-
 4 files changed, 77 insertions(+), 1 deletion(-)
 create mode 100644 spec/model/users_spec.rb

diff --git a/Gemfile b/Gemfile
index a0a62a0..737277a 100644
--- a/Gemfile
+++ b/Gemfile
@@ -67,6 +67,7 @@ group :test do
   gem 'rspec-rails'
   gem 'factory_bot_rails'
   gem 'faker'
+  gem 'shoulda-matchers', '~> 4.0'
 end
 
 gem 'devise'
diff --git a/Gemfile.lock b/Gemfile.lock
index 77ee8b7..7605595 100644
--- a/Gemfile.lock
+++ b/Gemfile.lock
@@ -275,6 +275,8 @@ GEM
       rexml (~> 3.2, >= 3.2.5)
       rubyzip (>= 1.2.2, < 3.0)
       websocket (~> 1.0)
+    shoulda-matchers (4.5.1)
+      activesupport (>= 4.2.0)
     sprockets (4.2.1)
       concurrent-ruby (~> 1.0)
       rack (>= 2.2.4, < 4)
@@ -335,6 +337,7 @@ DEPENDENCIES
   rspec-rails
   sassc-rails
   selenium-webdriver
+  shoulda-matchers (~> 4.0)
   sprockets-rails
   sqlite3 (>= 1.4)
   stimulus-rails
diff --git a/spec/model/users_spec.rb b/spec/model/users_spec.rb
new file mode 100644
index 0000000..280bde1
--- /dev/null
+++ b/spec/model/users_spec.rb
@@ -0,0 +1,66 @@
+require 'rails_helper'
+
+RSpec.describe User, type: :model do
+  describe "バリデーション" do
+    it "有効な属性を持つ場合は有効であること" do
+      user = User.new(name: "テストユーザー", email: "test@example.com", password: "password")
+      expect(user).to be_valid
+    end
+
+    it "名前がない場合は無効であること" do
+      user = User.new(name: nil)
+      expect(user).to_not be_valid
+    end
+
+    it "メールアドレスがない場合は無効であること" do
+      user = User.new(email: nil)
+      expect(user).to_not be_valid
+    end
+
+    it "パスワードがない場合は無効であること" do
+      user = User.new(password: nil)
+      expect(user).to_not be_valid
+    end
+
+    it "重複するメールアドレスを持つ場合は無効であること" do
+      User.create(email: "test@example.com", password: "password")
+      user = User.new(email: "test@example.com", password: "password")
+      expect(user).to_not be_valid
+    end
+  end
+
+  describe "アソシエーション" do
+    it { should have_many(:onsens).dependent(:destroy) }
+    it { should have_many(:saved_onsens).class_name('Onsen').with_foreign_key('saved_by_user_id') }
+    it { should have_one_attached(:avatar) }
+  end
+
+  describe "ゲスト" do
+    it "ゲストユーザーの場合はtrueを返すこと" do
+      user = User.new(email: 'guest@example.com')
+      expect(user.guest?).to be_truthy
+    end
+
+    it "ゲストユーザーでない場合はfalseを返すこと" do
+      user = User.new(email: 'test@example.com')
+      expect(user.guest?).to be_falsey
+    end
+  end
+
+  describe "アイコン" do
+    it "アイコンを追加できること" do
+      user = User.new(email: "test@example.com", password: "password")
+      user.avatar.attach(io: Rails.root.join('spec/fixtures/files/default_avatar.png').open, filename: 'default_avatar.png',
+                         content_type: 'image/png')
+      expect(user.avatar).to be_attached
+    end
+
+    it "アイコンを削除できること" do
+      user = User.create(email: "test@example.com", password: "password")
+      user.avatar.attach(io: Rails.root.join('spec/fixtures/files/default_avatar.png').open, filename: 'default_avatar.png',
+                         content_type: 'image/png')
+      user.avatar.purge
+      expect(user.avatar.attached?).to be_falsey
+    end
+  end
+end
diff --git a/spec/rails_helper.rb b/spec/rails_helper.rb
index a320011..f525271 100644
--- a/spec/rails_helper.rb
+++ b/spec/rails_helper.rb
@@ -68,10 +68,16 @@ RSpec.configure do |config|
     driven_by :rack_test
   end
 
-
   config.before(:each, type: :system, js: true) do
     driven_by :selenium_chrome_headless
   end
 
   config.include Devise::Test::IntegrationHelpers, type: :system
+
+  Shoulda::Matchers.configure do |config|
+    config.integrate do |with|
+      with.test_framework :rspec
+      with.library :rails
+    end
+  end  
 end
-- 
2.39.3 (Apple Git-145)

